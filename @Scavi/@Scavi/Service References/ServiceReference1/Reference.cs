//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace _Scavi.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.webservicex.net/", ConfigurationName="ServiceReference1.GeoIPServiceSoap")]
    public interface GeoIPServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webservicex.net/GetGeoIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetGeoIP(string IPAddress, System.AsyncCallback callback, object asyncState);
        
        _Scavi.ServiceReference1.GeoIP EndGetGeoIP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webservicex.net/GetGeoIPContext", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetGeoIPContext(System.AsyncCallback callback, object asyncState);
        
        _Scavi.ServiceReference1.GeoIP EndGetGeoIPContext(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webservicex.net/")]
    public partial class GeoIP : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int returnCodeField;
        
        private string ipField;
        
        private string returnCodeDetailsField;
        
        private string countryNameField;
        
        private string countryCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ReturnCode {
            get {
                return this.returnCodeField;
            }
            set {
                this.returnCodeField = value;
                this.RaisePropertyChanged("ReturnCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
                this.RaisePropertyChanged("IP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReturnCodeDetails {
            get {
                return this.returnCodeDetailsField;
            }
            set {
                this.returnCodeDetailsField = value;
                this.RaisePropertyChanged("ReturnCodeDetails");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
                this.RaisePropertyChanged("CountryName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GeoIPServiceSoapChannel : _Scavi.ServiceReference1.GeoIPServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGeoIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGeoIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public _Scavi.ServiceReference1.GeoIP Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((_Scavi.ServiceReference1.GeoIP)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGeoIPContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGeoIPContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public _Scavi.ServiceReference1.GeoIP Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((_Scavi.ServiceReference1.GeoIP)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeoIPServiceSoapClient : System.ServiceModel.ClientBase<_Scavi.ServiceReference1.GeoIPServiceSoap>, _Scavi.ServiceReference1.GeoIPServiceSoap {
        
        private BeginOperationDelegate onBeginGetGeoIPDelegate;
        
        private EndOperationDelegate onEndGetGeoIPDelegate;
        
        private System.Threading.SendOrPostCallback onGetGeoIPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGeoIPContextDelegate;
        
        private EndOperationDelegate onEndGetGeoIPContextDelegate;
        
        private System.Threading.SendOrPostCallback onGetGeoIPContextCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public GeoIPServiceSoapClient() {
        }
        
        public GeoIPServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeoIPServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoIPServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoIPServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetGeoIPCompletedEventArgs> GetGeoIPCompleted;
        
        public event System.EventHandler<GetGeoIPContextCompletedEventArgs> GetGeoIPContextCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult _Scavi.ServiceReference1.GeoIPServiceSoap.BeginGetGeoIP(string IPAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGeoIP(IPAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _Scavi.ServiceReference1.GeoIP _Scavi.ServiceReference1.GeoIPServiceSoap.EndGetGeoIP(System.IAsyncResult result) {
            return base.Channel.EndGetGeoIP(result);
        }
        
        private System.IAsyncResult OnBeginGetGeoIP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string IPAddress = ((string)(inValues[0]));
            return ((_Scavi.ServiceReference1.GeoIPServiceSoap)(this)).BeginGetGeoIP(IPAddress, callback, asyncState);
        }
        
        private object[] OnEndGetGeoIP(System.IAsyncResult result) {
            _Scavi.ServiceReference1.GeoIP retVal = ((_Scavi.ServiceReference1.GeoIPServiceSoap)(this)).EndGetGeoIP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGeoIPCompleted(object state) {
            if ((this.GetGeoIPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGeoIPCompleted(this, new GetGeoIPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGeoIPAsync(string IPAddress) {
            this.GetGeoIPAsync(IPAddress, null);
        }
        
        public void GetGeoIPAsync(string IPAddress, object userState) {
            if ((this.onBeginGetGeoIPDelegate == null)) {
                this.onBeginGetGeoIPDelegate = new BeginOperationDelegate(this.OnBeginGetGeoIP);
            }
            if ((this.onEndGetGeoIPDelegate == null)) {
                this.onEndGetGeoIPDelegate = new EndOperationDelegate(this.OnEndGetGeoIP);
            }
            if ((this.onGetGeoIPCompletedDelegate == null)) {
                this.onGetGeoIPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGeoIPCompleted);
            }
            base.InvokeAsync(this.onBeginGetGeoIPDelegate, new object[] {
                        IPAddress}, this.onEndGetGeoIPDelegate, this.onGetGeoIPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult _Scavi.ServiceReference1.GeoIPServiceSoap.BeginGetGeoIPContext(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGeoIPContext(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _Scavi.ServiceReference1.GeoIP _Scavi.ServiceReference1.GeoIPServiceSoap.EndGetGeoIPContext(System.IAsyncResult result) {
            return base.Channel.EndGetGeoIPContext(result);
        }
        
        private System.IAsyncResult OnBeginGetGeoIPContext(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((_Scavi.ServiceReference1.GeoIPServiceSoap)(this)).BeginGetGeoIPContext(callback, asyncState);
        }
        
        private object[] OnEndGetGeoIPContext(System.IAsyncResult result) {
            _Scavi.ServiceReference1.GeoIP retVal = ((_Scavi.ServiceReference1.GeoIPServiceSoap)(this)).EndGetGeoIPContext(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGeoIPContextCompleted(object state) {
            if ((this.GetGeoIPContextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGeoIPContextCompleted(this, new GetGeoIPContextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGeoIPContextAsync() {
            this.GetGeoIPContextAsync(null);
        }
        
        public void GetGeoIPContextAsync(object userState) {
            if ((this.onBeginGetGeoIPContextDelegate == null)) {
                this.onBeginGetGeoIPContextDelegate = new BeginOperationDelegate(this.OnBeginGetGeoIPContext);
            }
            if ((this.onEndGetGeoIPContextDelegate == null)) {
                this.onEndGetGeoIPContextDelegate = new EndOperationDelegate(this.OnEndGetGeoIPContext);
            }
            if ((this.onGetGeoIPContextCompletedDelegate == null)) {
                this.onGetGeoIPContextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGeoIPContextCompleted);
            }
            base.InvokeAsync(this.onBeginGetGeoIPContextDelegate, null, this.onEndGetGeoIPContextDelegate, this.onGetGeoIPContextCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override _Scavi.ServiceReference1.GeoIPServiceSoap CreateChannel() {
            return new GeoIPServiceSoapClientChannel(this);
        }
        
        private class GeoIPServiceSoapClientChannel : ChannelBase<_Scavi.ServiceReference1.GeoIPServiceSoap>, _Scavi.ServiceReference1.GeoIPServiceSoap {
            
            public GeoIPServiceSoapClientChannel(System.ServiceModel.ClientBase<_Scavi.ServiceReference1.GeoIPServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetGeoIP(string IPAddress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = IPAddress;
                System.IAsyncResult _result = base.BeginInvoke("GetGeoIP", _args, callback, asyncState);
                return _result;
            }
            
            public _Scavi.ServiceReference1.GeoIP EndGetGeoIP(System.IAsyncResult result) {
                object[] _args = new object[0];
                _Scavi.ServiceReference1.GeoIP _result = ((_Scavi.ServiceReference1.GeoIP)(base.EndInvoke("GetGeoIP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGeoIPContext(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGeoIPContext", _args, callback, asyncState);
                return _result;
            }
            
            public _Scavi.ServiceReference1.GeoIP EndGetGeoIPContext(System.IAsyncResult result) {
                object[] _args = new object[0];
                _Scavi.ServiceReference1.GeoIP _result = ((_Scavi.ServiceReference1.GeoIP)(base.EndInvoke("GetGeoIPContext", _args, result)));
                return _result;
            }
        }
    }
}
