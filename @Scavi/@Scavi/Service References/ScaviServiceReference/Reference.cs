//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace _Scavi.ScaviServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScaviServiceReference.IScaviService")]
    public interface IScaviService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScaviService/GetPointOfInterestRSS", ReplyAction="http://tempuri.org/IScaviService/GetPointOfInterestRSSResponse")]
        System.IAsyncResult BeginGetPointOfInterestRSS(System.AsyncCallback callback, object asyncState);
        
        string EndGetPointOfInterestRSS(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScaviServiceChannel : _Scavi.ScaviServiceReference.IScaviService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPointOfInterestRSSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPointOfInterestRSSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScaviServiceClient : System.ServiceModel.ClientBase<_Scavi.ScaviServiceReference.IScaviService>, _Scavi.ScaviServiceReference.IScaviService {
        
        private BeginOperationDelegate onBeginGetPointOfInterestRSSDelegate;
        
        private EndOperationDelegate onEndGetPointOfInterestRSSDelegate;
        
        private System.Threading.SendOrPostCallback onGetPointOfInterestRSSCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ScaviServiceClient() {
        }
        
        public ScaviServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScaviServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScaviServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScaviServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetPointOfInterestRSSCompletedEventArgs> GetPointOfInterestRSSCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult _Scavi.ScaviServiceReference.IScaviService.BeginGetPointOfInterestRSS(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPointOfInterestRSS(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string _Scavi.ScaviServiceReference.IScaviService.EndGetPointOfInterestRSS(System.IAsyncResult result) {
            return base.Channel.EndGetPointOfInterestRSS(result);
        }
        
        private System.IAsyncResult OnBeginGetPointOfInterestRSS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((_Scavi.ScaviServiceReference.IScaviService)(this)).BeginGetPointOfInterestRSS(callback, asyncState);
        }
        
        private object[] OnEndGetPointOfInterestRSS(System.IAsyncResult result) {
            string retVal = ((_Scavi.ScaviServiceReference.IScaviService)(this)).EndGetPointOfInterestRSS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPointOfInterestRSSCompleted(object state) {
            if ((this.GetPointOfInterestRSSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPointOfInterestRSSCompleted(this, new GetPointOfInterestRSSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPointOfInterestRSSAsync() {
            this.GetPointOfInterestRSSAsync(null);
        }
        
        public void GetPointOfInterestRSSAsync(object userState) {
            if ((this.onBeginGetPointOfInterestRSSDelegate == null)) {
                this.onBeginGetPointOfInterestRSSDelegate = new BeginOperationDelegate(this.OnBeginGetPointOfInterestRSS);
            }
            if ((this.onEndGetPointOfInterestRSSDelegate == null)) {
                this.onEndGetPointOfInterestRSSDelegate = new EndOperationDelegate(this.OnEndGetPointOfInterestRSS);
            }
            if ((this.onGetPointOfInterestRSSCompletedDelegate == null)) {
                this.onGetPointOfInterestRSSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPointOfInterestRSSCompleted);
            }
            base.InvokeAsync(this.onBeginGetPointOfInterestRSSDelegate, null, this.onEndGetPointOfInterestRSSDelegate, this.onGetPointOfInterestRSSCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override _Scavi.ScaviServiceReference.IScaviService CreateChannel() {
            return new ScaviServiceClientChannel(this);
        }
        
        private class ScaviServiceClientChannel : ChannelBase<_Scavi.ScaviServiceReference.IScaviService>, _Scavi.ScaviServiceReference.IScaviService {
            
            public ScaviServiceClientChannel(System.ServiceModel.ClientBase<_Scavi.ScaviServiceReference.IScaviService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPointOfInterestRSS(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPointOfInterestRSS", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetPointOfInterestRSS(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetPointOfInterestRSS", _args, result)));
                return _result;
            }
        }
    }
}
